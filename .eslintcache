[{"/Users/he.bae/Desktop/he.bae/react-test/src/reportWebVitals.js":"1","/Users/he.bae/Desktop/he.bae/react-test/src/index.js":"2","/Users/he.bae/Desktop/he.bae/react-test/src/app.jsx":"3","/Users/he.bae/Desktop/he.bae/react-test/src/component/appbar.js":"4","/Users/he.bae/Desktop/he.bae/react-test/src/component/table.jsx":"5","/Users/he.bae/Desktop/he.bae/react-test/src/component/datatable.js":"6","/Users/he.bae/Desktop/he.bae/react-test/src/component/historyDialog.jsx":"7","/Users/he.bae/Desktop/he.bae/react-test/src/component/layout/header.jsx":"8","/Users/he.bae/Desktop/he.bae/react-test/src/component/layout/menubar.jsx":"9","/Users/he.bae/Desktop/he.bae/react-test/src/searchOptions.js":"10","/Users/he.bae/Desktop/he.bae/react-test/src/api/history.js":"11","/Users/he.bae/Desktop/he.bae/react-test/src/component/Table.jsx":"12","/Users/he.bae/Desktop/he.bae/react-test/src/component/searchArea.jsx":"13","/Users/he.bae/Desktop/he.bae/react-test/src/component/noticeDialog.jsx":"14","/Users/he.bae/Desktop/he.bae/react-test/src/component/customer.jsx":"15","/Users/he.bae/Desktop/he.bae/react-test/src/api/setting.js":"16","/Users/he.bae/Desktop/he.bae/react-test/src/api/index.js":"17","/Users/he.bae/Desktop/he.bae/react-test/src/component/customerDialog.jsx":"18","/Users/he.bae/Desktop/he.bae/react-test/src/component/login.jsx":"19"},{"size":362,"mtime":1612226765193,"results":"20","hashOfConfig":"21"},{"size":505,"mtime":1612771657089,"results":"22","hashOfConfig":"21"},{"size":678,"mtime":1613464872163,"results":"23","hashOfConfig":"21"},{"size":1283,"mtime":1612233152795,"results":"24","hashOfConfig":"21"},{"size":7648,"mtime":1613373774984,"results":"25","hashOfConfig":"21"},{"size":1635,"mtime":1612253168751,"results":"26","hashOfConfig":"21"},{"size":13798,"mtime":1613377956835,"results":"27","hashOfConfig":"21"},{"size":505,"mtime":1612331609591,"results":"28","hashOfConfig":"21"},{"size":3425,"mtime":1613464638584,"results":"29","hashOfConfig":"21"},{"size":1717,"mtime":1612339610586,"results":"30","hashOfConfig":"21"},{"size":489,"mtime":1612420138129,"results":"31","hashOfConfig":"21"},{"size":4886,"mtime":1612425383480,"results":"32","hashOfConfig":"21"},{"size":7496,"mtime":1612771122687,"results":"33","hashOfConfig":"21"},{"size":847,"mtime":1613377902547,"results":"34","hashOfConfig":"21"},{"size":4694,"mtime":1613462782475,"results":"35","hashOfConfig":"21"},{"size":200,"mtime":1613451666043,"results":"36","hashOfConfig":"21"},{"size":194,"mtime":1612419477626,"results":"37","hashOfConfig":"21"},{"size":1730,"mtime":1613458703961,"results":"38","hashOfConfig":"21"},{"size":2532,"mtime":1613466811148,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"btl1ck",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/he.bae/Desktop/he.bae/react-test/src/reportWebVitals.js",[],"/Users/he.bae/Desktop/he.bae/react-test/src/index.js",[],["82","83"],"/Users/he.bae/Desktop/he.bae/react-test/src/app.jsx",["84","85"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/appbar.js",[],"/Users/he.bae/Desktop/he.bae/react-test/src/component/table.jsx",["86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Dialog from './historyDialog'\nimport { Typography } from 'antd';\nimport { Button } from 'antd';\nimport { Row, Col, Divider } from 'antd';\n\nimport { Table, Tag, Radio, Space, Pagination } from 'antd';\n\nimport axios from 'axios'\nimport {\n    lookupHistory,\n    createHistory,\n    updateHistory,\n    deleteHistory,\n    searchOption,\n} from '../api/history'\nimport SearchArea from './searchArea';\n\n\nconst headers = [\n    {\n        title: '엔지니어',\n        sortable: false,\n        value: 'user_nm',\n        width: '10%',\n        align: 'center',\n        dataIndex: 'user_nm',\n        key: 'user_nm',\n    },\n    {\n        title: '고객사', value: 'customer_nm', sortable: false, width: '10%', align: 'center', dataIndex: 'customer_nm',\n        key: 'customer_nm',\n    },\n    {\n        title: '솔루션', value: 'solution_nm', sortable: false, width: '10%', align: 'center',\n        dataIndex: 'solution_nm',\n        key: 'solution_nm',\n    },\n    {\n        title: '업무구분', value: 'work_type', sortable: false, width: '10%', align: 'center',\n        dataIndex: 'work_type',\n        key: 'work_type',\n    },\n    {\n        title: '업무내용', value: 'work_content', sortable: false, width: '10%', align: 'center',\n        dataIndex: 'work_content',\n        key: 'work_content',\n    },\n    {\n        title: '업무형태', value: 'work_flag', sortable: false, width: '10%', align: 'center',\n        dataIndex: 'work_flag',\n        key: 'work_flag',\n    },\n    {\n        title: '지원시간(Min)',\n        value: 'work_time_min',\n        sortable: false,\n        width: '10%',\n        align: 'center',\n        dataIndex: 'work_time_min',\n        key: 'work_time_min',\n    },\n    {\n        title: '이동시간(Min)',\n        value: 'move_time_min',\n        sortable: false,\n        width: '10%',\n        align: 'center',\n        dataIndex: 'move_time_min',\n        key: 'move_time_min',\n    },\n    {\n        title: '지원일자', value: 'work_date', sortable: false, width: '10%', align: 'center',\n        dataIndex: 'work_date',\n        key: 'work_date',\n    },\n];\n\n\nconst rows = [\n    {\n        customer_id: \"1093625a-469e-4723-9cfd-2831a7a38ecc\",\n        customer_nm: \"배달의민족1\",\n        move_time_min: 22,\n        solution_id: \"fd0ebe2f-1fa1-413e-b71e-9014cc2be519\",\n        solution_nm: \"RPA Portal\",\n        user_nm: \"이름\",\n        work_content: \"개발\",\n        work_content_detail: \"zz!\",\n        work_content_id: \"developmt\",\n        work_date: \"20210211\",\n        work_flag: \"내근\",\n        work_flag_id: \"inner\",\n        work_hist_id: \"51e93835-b057-43b7-a3c1-11f2e970fd8e\",\n        work_time_min: 11,\n        work_type: \"프로젝트\",\n        work_type_id: \"project\"\n    }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n\n    },\n    container: {\n        maxHeight: 440,\n    },\n    grid: {\n        width: 'fit-content',\n        border: `1px solid `,\n\n    }\n}));\n\nconst searchData = {\n    user_nm: null,\n    customer_id: null,\n    work_flag_id: null,\n    work_content_id: null,\n    work_type_id: null,\n    searchStartDate: null,\n    searchEndDate: null,\n    page: 1,\n    itemsPerPage: 10,\n}\n\n\nexport default function StickyHeadTable() {\n\n    const { Title } = Typography;\n\n    //state 변수 open 선언, setOpen으로 세팅\n    //내역 추가 팝업 오픈 여부\n    const [open, setOpen] = useState(false)\n\n    //검색 조건 부분 오픈 여부\n    const [searchOpen, setSearchOpen] = useState(true)\n\n    //현재 페이지에 노출될 데이터 10건\n    const [data, setData] = useState([])\n\n    //총 생성될 페이지수 \n    const [total, setTotal] = useState(0)\n\n    const [current, setCurrent] = useState(1)\n\n    //pagination 될때마다 데이터 바꿔서 검색\n    const [searchData, setSearchData] = useState({\n        user_nm: null,\n        customer_id: null,\n        work_flag_id: null,\n        work_content_id: null,\n        work_type_id: null,\n        searchStartDate: null,\n        searchEndDate: null,\n        page: 1,\n        itemsPerPage: 10,\n    })\n\n    const [record, setRecord] = useState({})\n    const [flag, setFlag] = useState('')\n\n    useEffect(() => {\n        // console.log(\"history 가져오기\")\n\n        try {\n            // const { data, status } = lookupHistory(searchData)\n            lookupHistory(searchData).then((res) => {\n                const { history, total } = res.data\n\n                setData(history)\n\n                setTotal(total)\n\n                // console.log(\"check data\", history);\n\n            })\n        } catch (err) {\n            console.error(err)\n            // return Promise.reject(err)\n        }\n\n    }, [searchData, open])\n\n\n    const onChange = (pageNumber) => {\n        setSearchData({ page: pageNumber.current, itemsPerPage: 10 })\n    }\n\n    const openDialog = (flag, record) => {\n        // console.log(\"open dialog\")\n        setFlag(flag)\n\n        if (flag === 'update') {\n            setRecord({ ...record })\n\n\n        } else {\n            setRecord({\n                customer_id: \"\",\n                customer_nm: \"\",\n                move_time_min: 0,\n                solution_id: \"\",\n                solution_nm: \"\",\n                user_nm: \"\",\n                work_content: \"\",\n                work_content_detail: \"\",\n                work_content_id: \"\",\n                // work_date: \"\",\n                work_flag: \"\",\n                work_flag_id: \"\",\n                work_hist_id: \"\",\n                work_time_min: 0,\n                work_type: \"\",\n                work_type_id: \"\"\n            })\n        }\n\n        setOpen(true)\n\n        // console.log(flag)\n        console.log(\"record when opening dialog. \", record)\n\n    }\n\n    const openSearchArea = () => {\n\n        setSearchOpen(!searchOpen)\n        console.log(searchOpen)\n    }\n\n    return (\n        <>\n            <Row >\n                <Col className=\"gutter-row\" span={6}>\n                    <Title level={2}>업무 수행 내역</Title>\n                </Col>\n                <Col className=\"gutter-row\" span={12}>\n                </Col>\n                <Col className=\"gutter-row\" span={6}>\n                    <Button type=\"primary\" style={{ width: '100px', height: '30px', margin: '10px' }} onClick={() => openDialog('create', {})}>내역 추가</Button>\n                    <Dialog open={open} setOpen={setOpen} record={record} setRecord={setRecord} flag={flag} setFlag={setFlag}>\n                    </Dialog>\n\n                    <Button type=\"default\" style={{ width: '100px', height: '30px', margin: '10px' }} onClick={openSearchArea}>검색 조건</Button>\n\n\n                </Col>\n            </Row>\n            <SearchArea searchOpen={searchOpen} setSearchOpen={setSearchOpen} ></SearchArea>\n\n            <Divider orientation=\"left\"></Divider>\n            <Table\n                rowKey={data.work_hist_id}\n                columns={headers}\n                dataSource={data}\n                showHeader={true}\n                pagination={{\n                    total: total,\n                    pageSize: 10,\n                    hideOnSinglePage: false,\n\n                }}\n                onChange={onChange}\n                onRow={(record, rowIndex) => {\n                    return {\n                        onClick: event => {\n                            // console.log(record);    //row data\n                            openDialog('update', record)\n                        }\n                    }\n                }}\n            // onRow\n            >\n            </Table>\n\n\n        </>\n\n    );\n}\n","/Users/he.bae/Desktop/he.bae/react-test/src/component/datatable.js",["100","101","102","103","104","105","106","107"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/historyDialog.jsx",["108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { useState, useEffect } from 'react';\nimport { Modal, Row, Col } from 'antd';\nimport { Form, Button, Checkbox } from 'antd';\nimport { Select } from 'antd';\nimport { workType, solutions, workFlag, workContent } from '../searchOptions.js'\nimport { Input, InputNumber } from 'antd';\nimport { DatePicker, Space } from 'antd';\nimport moment from 'moment'\n\nimport {\n    createHistory,\n    updateHistory,\n    deleteHistory,\n    searchOption,\n} from '../api/history'\n\nimport NoticeDialog from './noticeDialog'\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst HistoryDialog = ({ open, setOpen, record, setRecord, flag, setFlag }) => {\n\n    const [history, setHistroy] = useState([])\n\n    const [customer, setCustomer] = useState([])\n    const [solution, setSolution] = useState([])\n\n    const [noticeTitle, setNoticeTitle] = useState('')\n    const [noticeContent, setNoticeContent] = useState('')\n    const [noticeOpen, setnoticeOpen] = useState(false)\n    const [isDelete, setisDelete] = useState(false)\n\n    //사용할 form  이름 설정\n    const [dialogForm] = Form.useForm()\n\n    const id = dialogForm.getFieldValue(\"work_hist_id\")\n    // console.log(\"현재 record     \", record)\n    //레코드 데이터 세팅 하기\n    dialogForm.setFieldsValue({ ...record, work_date: moment(record.work_date) || moment() })\n\n\n    // console.log(\"구분    \", flag)\n\n    useEffect(() => {\n        // console.log(\"dialog 용 데이터 가져오기\")\n        // console.log(dialogForm)\n        // console.log(\"record data : \", dialogForm.getFieldsValue())\n\n    }, [record])\n\n    useEffect(() => {\n\n        const testOptions = async () => {\n            try {\n                const { data: { customer, solution } } = await searchOption()\n                // setWorkType(workType)\n                // setWorkContent(workContent)\n                // setWorkFlag(workFlag)\n                setCustomer(customer)\n                setSolution(solution)\n\n                return Promise.resolve(customer)\n\n            } catch (error) {\n                console.error(error)\n                return Promise.resolve(false)\n            }\n\n        }\n\n        testOptions().then((res) => {\n\n            const formatting = res.map(cus => {\n                const value = cus.customer_id\n                const label = cus.customer_nm\n                // cus.value = value\n                // cus.label = label\n                cus.value = label;\n                cus.key = value;\n                return cus\n            })\n            setCustomer(formatting)\n\n        })\n\n\n\n    }, [])\n\n    const handleClickOpen = () => {\n        // console.log(\"handleClickOpen\")\n        // setOpen(true);\n\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n\n        console.log(\"rocord when closing dialog\", record)\n        // dialogForm.setFieldsValue({ ...record, work_date: moment(record.work_date) })\n\n\n\n    };\n\n    const onFinish = async (values) => {\n\n        const success = false\n        console.log(\"현재 팝업 상태 : \", flag)\n        // 입력받은 데이터 확인\n        values.work_date = (values.work_date).format('YYYYMMDD')\n\n        if (flag === 'create') {\n            console.log(values)\n\n            try {\n                const { data, status } = await createHistory(values)\n                // console.log(data)\n                console.log(status)\n\n                setnoticeOpen(true)\n\n                setNoticeTitle('알림')\n                setNoticeContent('등록되었습니다.')\n\n            } catch (err) {\n                console.error(err)\n                //오류팝업\n                setNoticeTitle('오류')\n                setNoticeContent('등록 실패.')\n            }\n\n        } else {\n            const id = dialogForm.getFieldValue(\"work_hist_id\")\n            console.log(values)\n\n            try {\n                const { status } = await updateHistory(id, values)\n                //status = 200 이면 성공\n                // console.log(status)\n                setnoticeOpen(true)\n\n                setNoticeTitle('알림')\n                setNoticeContent('수정되었습니다.')\n            } catch (error) {\n                console.error(error)\n                //오류팝업\n                setNoticeTitle('오류')\n                setNoticeContent('등록 실패.')\n            }\n        }\n        // console.log('지원일자:', (values.work_date).format('YYYYMMDD'));\n\n\n        // console.log(dialogForm.getFieldValue(\"work_hist_id\"))\n\n\n\n        handleClose()\n\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const handleChange = (value) => {\n\n        console.log(value)\n    }\n\n    const handleDelete = async () => {\n        try {\n            const id = dialogForm.getFieldValue(\"work_hist_id\")\n            console.log(id)\n            const { data, status } = await deleteHistory(id)\n\n            if (status === 200) {\n                console.log(\"삭제완료\")\n                setnoticeOpen(true)\n                setNoticeTitle('알림')\n                setNoticeContent('삭제되었습니다.')\n            }\n            handleClose()\n        } catch (error) {\n            console.error(error)\n            //오류팝업\n            setNoticeTitle('오류')\n            setNoticeContent('에러 발생.')\n        }\n\n    }\n\n\n    return (\n        <>\n\n            <NoticeDialog open={noticeOpen} setOpen={setnoticeOpen} title={noticeTitle} content={noticeContent} />\n            <Modal\n                visible={open}\n                title={\"업무내역\" + (flag === \"create\" ? \" 등록\" : \"\")}\n                onOk={handleClickOpen}\n                onCancel={handleClose}\n                footer={[\n                    <Button hidden={flag === \"create\"} key=\"delete\" onClick={handleDelete}>\n                        삭제\n            </Button>,\n                    <Button key=\"back\" onClick={handleClose}>\n                        닫기\n            </Button>,\n                    <Button key=\"submit\" type=\"primary\" form='form' htmlType=\"submit\">\n                        저장\n            </Button>,\n                ]}\n            >\n\n                <Form\n                    name=\"basic\"\n                    form={dialogForm}\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    id='form'\n                >\n                    <Row>\n                        <Col style={{ width: '50%' }}>\n                            <Form.Item\n                                label=\"업무구분\"\n                                name=\"work_type_id\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '업무구분',\n                                    },\n                                ]}\n\n                            >\n                                <Select onChange={handleChange}>\n                                    {workType.map((type) => {\n                                        return <Option key={type.code_id}>{type.code_nm}</Option>\n                                    })}\n\n                                </Select>\n\n                            </Form.Item>\n                        </Col>\n                        <Col style={{ width: '50%' }}><Form.Item\n                            label=\"고객사\"\n                            name=\"customer_id\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '고객사',\n                                },\n                            ]}\n                        >\n                            <Select onChange={handleChange}>\n                                {customer.map((cus) => {\n                                    return <Option key={cus.customer_id}>{cus.customer_nm}</Option>\n                                })}\n\n                            </Select>\n\n                        </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ width: '50%' }}>\n                            <Form.Item\n                                label=\"업무내용\"\n                                name=\"work_content_id\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '업무내용',\n                                    },\n                                ]}\n\n                            >\n                                <Select onChange={handleChange}>\n                                    {workContent.map((content) => {\n                                        return <Option key={content.code_id}>{content.code_nm}</Option>\n                                    })}\n\n                                </Select>\n\n                            </Form.Item>\n                        </Col>\n                        <Col style={{ width: '50%' }}><Form.Item\n                            label=\"업무형태\"\n                            name=\"work_flag_id\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '업무형태',\n                                },\n                            ]}\n                        >\n                            <Select onChange={handleChange}>\n                                {workFlag.map((flag) => {\n                                    return <Option key={flag.code_id}>{flag.code_nm}</Option>\n                                })}\n\n                            </Select>\n\n                        </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ width: '50%' }}>\n                            <Form.Item\n                                label=\"일자\"\n                                name=\"work_date\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '일자',\n                                    },\n                                ]}\n\n                            >\n                                <DatePicker onChange={handleChange} />\n\n                            </Form.Item>\n                        </Col>\n                        <Col style={{ width: '50%' }}><Form.Item\n                            label=\"솔루션\"\n                            name=\"solution_id\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '솔루션',\n                                },\n                            ]}\n                        >\n                            <Select onChange={handleChange}>\n                                {solutions.map((sol) => {\n                                    return <Option key={sol.solution_id}>{sol.solution_nm}</Option>\n                                })}\n\n                            </Select>\n\n                        </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ width: '50%' }}>\n                            <Form.Item\n                                label=\"지원시간\"\n                                name=\"work_time_min\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '지원시간',\n                                    },\n                                ]}\n                            >\n                                <InputNumber min={0} initialValues={0} onChange={handleChange} />\n                            </Form.Item>\n                        </Col>\n                        <Col style={{ width: '50%' }}>\n                            <Form.Item\n                                label=\"이동시간\"\n                                name=\"move_time_min\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '이동시간',\n                                    },\n                                ]}\n                            >\n                                <InputNumber min={0} initialValues={0} onChange={handleChange} />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ width: '100%' }}>\n                            <Form.Item\n                                label=\"상세\"\n                                name=\"work_content_detail\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '상세',\n                                    },\n                                ]}\n                            >\n                                <TextArea rows={4} width={420}></TextArea>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    {/* <Form.Item\n                >\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item> */}\n\n\n                </Form>\n\n            </Modal>\n        </>\n    );\n};\n\nexport default HistoryDialog;","/Users/he.bae/Desktop/he.bae/react-test/src/component/layout/header.jsx",[],["120","121"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/layout/menubar.jsx",["122","123","124"],"/Users/he.bae/Desktop/he.bae/react-test/src/searchOptions.js",[],"/Users/he.bae/Desktop/he.bae/react-test/src/api/history.js",[],"/Users/he.bae/Desktop/he.bae/react-test/src/component/Table.jsx",["125","126","127","128","129","130","131","132","133","134"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/searchArea.jsx",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/noticeDialog.jsx",["157","158"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/customer.jsx",["159","160","161","162"],"/Users/he.bae/Desktop/he.bae/react-test/src/api/setting.js",[],"/Users/he.bae/Desktop/he.bae/react-test/src/api/index.js",[],"/Users/he.bae/Desktop/he.bae/react-test/src/component/customerDialog.jsx",["163","164","165","166"],"/Users/he.bae/Desktop/he.bae/react-test/src/component/login.jsx",["167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":14},{"ruleId":"172","severity":1,"message":"176","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":14},{"ruleId":"172","severity":1,"message":"177","line":9,"column":17,"nodeType":"174","messageId":"175","endLine":9,"endColumn":20},{"ruleId":"172","severity":1,"message":"178","line":9,"column":22,"nodeType":"174","messageId":"175","endLine":9,"endColumn":27},{"ruleId":"172","severity":1,"message":"179","line":9,"column":29,"nodeType":"174","messageId":"175","endLine":9,"endColumn":34},{"ruleId":"172","severity":1,"message":"180","line":9,"column":36,"nodeType":"174","messageId":"175","endLine":9,"endColumn":46},{"ruleId":"172","severity":1,"message":"181","line":11,"column":8,"nodeType":"174","messageId":"175","endLine":11,"endColumn":13},{"ruleId":"172","severity":1,"message":"182","line":14,"column":5,"nodeType":"174","messageId":"175","endLine":14,"endColumn":18},{"ruleId":"172","severity":1,"message":"183","line":15,"column":5,"nodeType":"174","messageId":"175","endLine":15,"endColumn":18},{"ruleId":"172","severity":1,"message":"184","line":16,"column":5,"nodeType":"174","messageId":"175","endLine":16,"endColumn":18},{"ruleId":"172","severity":1,"message":"185","line":17,"column":5,"nodeType":"174","messageId":"175","endLine":17,"endColumn":17},{"ruleId":"172","severity":1,"message":"186","line":82,"column":7,"nodeType":"174","messageId":"175","endLine":82,"endColumn":11},{"ruleId":"172","severity":1,"message":"187","line":103,"column":7,"nodeType":"174","messageId":"175","endLine":103,"endColumn":16},{"ruleId":"172","severity":1,"message":"188","line":118,"column":7,"nodeType":"174","messageId":"175","endLine":118,"endColumn":17},{"ruleId":"172","severity":1,"message":"189","line":148,"column":12,"nodeType":"174","messageId":"175","endLine":148,"endColumn":19},{"ruleId":"172","severity":1,"message":"190","line":148,"column":21,"nodeType":"174","messageId":"175","endLine":148,"endColumn":31},{"ruleId":"172","severity":1,"message":"191","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":20},{"ruleId":"172","severity":1,"message":"192","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":13},{"ruleId":"172","severity":1,"message":"193","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":17},{"ruleId":"172","severity":1,"message":"194","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":17},{"ruleId":"172","severity":1,"message":"195","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":17},{"ruleId":"172","severity":1,"message":"196","line":11,"column":8,"nodeType":"174","messageId":"175","endLine":11,"endColumn":16},{"ruleId":"172","severity":1,"message":"197","line":12,"column":8,"nodeType":"174","messageId":"175","endLine":12,"endColumn":13},{"ruleId":"172","severity":1,"message":"198","line":17,"column":8,"nodeType":"174","messageId":"175","endLine":17,"endColumn":14},{"ruleId":"172","severity":1,"message":"199","line":3,"column":24,"nodeType":"174","messageId":"175","endLine":3,"endColumn":32},{"ruleId":"172","severity":1,"message":"179","line":7,"column":22,"nodeType":"174","messageId":"175","endLine":7,"endColumn":27},{"ruleId":"172","severity":1,"message":"200","line":24,"column":12,"nodeType":"174","messageId":"175","endLine":24,"endColumn":19},{"ruleId":"172","severity":1,"message":"201","line":24,"column":21,"nodeType":"174","messageId":"175","endLine":24,"endColumn":31},{"ruleId":"172","severity":1,"message":"202","line":27,"column":12,"nodeType":"174","messageId":"175","endLine":27,"endColumn":20},{"ruleId":"172","severity":1,"message":"203","line":32,"column":12,"nodeType":"174","messageId":"175","endLine":32,"endColumn":20},{"ruleId":"172","severity":1,"message":"204","line":32,"column":22,"nodeType":"174","messageId":"175","endLine":32,"endColumn":33},{"ruleId":"172","severity":1,"message":"205","line":37,"column":11,"nodeType":"174","messageId":"175","endLine":37,"endColumn":13},{"ruleId":"172","severity":1,"message":"206","line":110,"column":15,"nodeType":"174","messageId":"175","endLine":110,"endColumn":22},{"ruleId":"172","severity":1,"message":"207","line":119,"column":25,"nodeType":"174","messageId":"175","endLine":119,"endColumn":29},{"ruleId":"172","severity":1,"message":"208","line":140,"column":25,"nodeType":"174","messageId":"175","endLine":140,"endColumn":31},{"ruleId":"172","severity":1,"message":"207","line":178,"column":21,"nodeType":"174","messageId":"175","endLine":178,"endColumn":25},{"ruleId":"168","replacedBy":"209"},{"ruleId":"170","replacedBy":"210"},{"ruleId":"172","severity":1,"message":"211","line":4,"column":5,"nodeType":"174","messageId":"175","endLine":4,"endColumn":23},{"ruleId":"172","severity":1,"message":"212","line":5,"column":5,"nodeType":"174","messageId":"175","endLine":5,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":70,"column":25,"nodeType":"215","endLine":71,"endColumn":48},{"ruleId":"172","severity":1,"message":"177","line":10,"column":17,"nodeType":"174","messageId":"175","endLine":10,"endColumn":20},{"ruleId":"172","severity":1,"message":"178","line":10,"column":22,"nodeType":"174","messageId":"175","endLine":10,"endColumn":27},{"ruleId":"172","severity":1,"message":"179","line":10,"column":29,"nodeType":"174","messageId":"175","endLine":10,"endColumn":34},{"ruleId":"172","severity":1,"message":"181","line":12,"column":8,"nodeType":"174","messageId":"175","endLine":12,"endColumn":13},{"ruleId":"172","severity":1,"message":"182","line":15,"column":5,"nodeType":"174","messageId":"175","endLine":15,"endColumn":18},{"ruleId":"172","severity":1,"message":"183","line":16,"column":5,"nodeType":"174","messageId":"175","endLine":16,"endColumn":18},{"ruleId":"172","severity":1,"message":"184","line":17,"column":5,"nodeType":"174","messageId":"175","endLine":17,"endColumn":18},{"ruleId":"172","severity":1,"message":"185","line":18,"column":5,"nodeType":"174","messageId":"175","endLine":18,"endColumn":17},{"ruleId":"172","severity":1,"message":"186","line":83,"column":7,"nodeType":"174","messageId":"175","endLine":83,"endColumn":11},{"ruleId":"172","severity":1,"message":"187","line":104,"column":7,"nodeType":"174","messageId":"175","endLine":104,"endColumn":16},{"ruleId":"172","severity":1,"message":"216","line":2,"column":20,"nodeType":"174","messageId":"175","endLine":2,"endColumn":27},{"ruleId":"172","severity":1,"message":"217","line":3,"column":24,"nodeType":"174","messageId":"175","endLine":3,"endColumn":29},{"ruleId":"172","severity":1,"message":"218","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"219","line":5,"column":20,"nodeType":"174","messageId":"175","endLine":5,"endColumn":28},{"ruleId":"172","severity":1,"message":"220","line":5,"column":30,"nodeType":"174","messageId":"175","endLine":5,"endColumn":39},{"ruleId":"172","severity":1,"message":"221","line":5,"column":41,"nodeType":"174","messageId":"175","endLine":5,"endColumn":49},{"ruleId":"172","severity":1,"message":"222","line":5,"column":51,"nodeType":"174","messageId":"175","endLine":5,"endColumn":62},{"ruleId":"172","severity":1,"message":"199","line":6,"column":24,"nodeType":"174","messageId":"175","endLine":6,"endColumn":32},{"ruleId":"172","severity":1,"message":"179","line":7,"column":22,"nodeType":"174","messageId":"175","endLine":7,"endColumn":27},{"ruleId":"172","severity":1,"message":"223","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":15},{"ruleId":"172","severity":1,"message":"224","line":13,"column":12,"nodeType":"174","messageId":"175","endLine":13,"endColumn":17},{"ruleId":"172","severity":1,"message":"225","line":13,"column":19,"nodeType":"174","messageId":"175","endLine":13,"endColumn":27},{"ruleId":"172","severity":1,"message":"226","line":14,"column":21,"nodeType":"174","messageId":"175","endLine":14,"endColumn":31},{"ruleId":"172","severity":1,"message":"227","line":16,"column":12,"nodeType":"174","messageId":"175","endLine":16,"endColumn":20},{"ruleId":"172","severity":1,"message":"228","line":16,"column":22,"nodeType":"174","messageId":"175","endLine":16,"endColumn":33},{"ruleId":"172","severity":1,"message":"229","line":17,"column":12,"nodeType":"174","messageId":"175","endLine":17,"endColumn":23},{"ruleId":"172","severity":1,"message":"230","line":17,"column":25,"nodeType":"174","messageId":"175","endLine":17,"endColumn":39},{"ruleId":"172","severity":1,"message":"231","line":18,"column":12,"nodeType":"174","messageId":"175","endLine":18,"endColumn":20},{"ruleId":"172","severity":1,"message":"232","line":18,"column":22,"nodeType":"174","messageId":"175","endLine":18,"endColumn":33},{"ruleId":"172","severity":1,"message":"202","line":20,"column":12,"nodeType":"174","messageId":"175","endLine":20,"endColumn":20},{"ruleId":"172","severity":1,"message":"233","line":22,"column":12,"nodeType":"174","messageId":"175","endLine":22,"endColumn":25},{"ruleId":"172","severity":1,"message":"234","line":23,"column":12,"nodeType":"174","messageId":"175","endLine":23,"endColumn":29},{"ruleId":"172","severity":1,"message":"179","line":2,"column":25,"nodeType":"174","messageId":"175","endLine":2,"endColumn":30},{"ruleId":"172","severity":1,"message":"235","line":14,"column":11,"nodeType":"174","messageId":"175","endLine":14,"endColumn":24},{"ruleId":"172","severity":1,"message":"236","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":28},{"ruleId":"172","severity":1,"message":"237","line":17,"column":12,"nodeType":"174","messageId":"175","endLine":17,"endColumn":22},{"ruleId":"172","severity":1,"message":"238","line":17,"column":24,"nodeType":"174","messageId":"175","endLine":17,"endColumn":37},{"ruleId":"172","severity":1,"message":"239","line":27,"column":11,"nodeType":"174","messageId":"175","endLine":27,"endColumn":16},{"ruleId":"172","severity":1,"message":"240","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":20},{"ruleId":"172","severity":1,"message":"241","line":10,"column":12,"nodeType":"174","messageId":"175","endLine":10,"endColumn":23},{"ruleId":"172","severity":1,"message":"242","line":11,"column":12,"nodeType":"174","messageId":"175","endLine":11,"endColumn":25},{"ruleId":"172","severity":1,"message":"243","line":12,"column":12,"nodeType":"174","messageId":"175","endLine":12,"endColumn":22},{"ruleId":"172","severity":1,"message":"216","line":2,"column":50,"nodeType":"174","messageId":"175","endLine":2,"endColumn":57},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Tag' is defined but never used.","'Radio' is defined but never used.","'Space' is defined but never used.","'Pagination' is defined but never used.","'axios' is defined but never used.","'createHistory' is defined but never used.","'updateHistory' is defined but never used.","'deleteHistory' is defined but never used.","'searchOption' is defined but never used.","'rows' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'searchData' is assigned a value but never used.","'current' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","'makeStyles' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'style' is defined but never used.","'Dialog' is defined but never used.","'Checkbox' is defined but never used.","'history' is assigned a value but never used.","'setHistroy' is assigned a value but never used.","'solution' is assigned a value but never used.","'isDelete' is assigned a value but never used.","'setisDelete' is assigned a value but never used.","'id' is assigned a value but never used.","'success' is assigned a value but never used.","'data' is assigned a value but never used.","'status' is assigned a value but never used.",["244"],["245"],"'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Divider' is defined but never used.","'Input' is defined but never used.","'workType' is defined but never used.","'customer' is defined but never used.","'solutions' is defined but never used.","'workFlag' is defined but never used.","'workContent' is defined but never used.","'Option' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'workType' is assigned a value but never used.","'setWorkType' is assigned a value but never used.","'workContent' is assigned a value but never used.","'setWorkContent' is assigned a value but never used.","'workFlag' is assigned a value but never used.","'setWorkFlag' is assigned a value but never used.","'customerValue' is assigned a value but never used.","'defaultCustomList' is assigned a value but never used.","'confirmDelete' is assigned a value but never used.","'ConsoleSqlOutlined' is defined but never used.","'customerId' is assigned a value but never used.","'setCustomerId' is assigned a value but never used.","'input' is assigned a value but never used.","'NoticeDialog' is defined but never used.","'noticeTitle' is assigned a value but never used.","'noticeContent' is assigned a value but never used.","'noticeOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]